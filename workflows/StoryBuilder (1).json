{
  "name": "StoryBuilder",
  "nodes": [
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "storyTopic"
            },
            {
              "name": "storyContext"
            },
            {
              "name": "chatID"
            },
            {
              "name": "contentStrategy"
            },
            {
              "name": "priority"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [-140, -100],
      "id": "f3dfb9dc-f0db-4aec-8689-222aa155b9d7",
      "name": "Enterprise Input Trigger"
    },
    {
      "parameters": {
        "model": "openai/gpt-4o",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [180, 0],
      "id": "8274e031-f72d-428a-8359-fd0d771feef6",
      "name": "Enterprise Visual Model",
      "credentials": {
        "openRouterApi": {
          "id": "ht1g53zw1Z9E7nlN",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Story Topic: {{ $('Enterprise Input Trigger').first().json.storyTopic }}\nStory Context: {{ $('Enterprise Input Trigger').first().json.storyContext }}\nContent Strategy: {{ $('Enterprise Input Trigger').first().json.contentStrategy || 'premium' }}\n\nCreate a detailed Instagram Story image prompt optimized for a 9:16 vertical format and the '{{ $('Enterprise Input Trigger').first().json.contentStrategy || 'premium' }}' strategy.",
        "options": {
          "systemMessage": "# Enterprise Instagram Story Visual Creator Agent v2.2\n\nYou are an advanced Enterprise Instagram Story Visual Creator optimized for vertical, mobile-first content.\n\n## Mission:\nCreate an exceptional, detailed image prompt perfect for an enterprise-level Instagram Story that:\n- Is optimized for a 9:16 vertical aspect ratio.\n- Grabs attention instantly in a fast-paced Story feed.\n- Aligns with specific content strategies (standard, premium, campaign).\n- Maintains SkinClarity Club's premium brand consistency.\n\n## Enterprise Visual Standards for Stories:\n- **Vertical Composition (9:16)**: Essential for full-screen impact.\n- **Clear Focal Point**: Usually in the center or upper-third to avoid being obscured by UI elements.\n- **Bold & Simple**: Stories are consumed quickly; visuals must be understood in a glance.\n- **Space for Text/Stickers**: The prompt should consider that text overlays or interactive elements might be added later.\n\n## SkinClarity Club Enterprise Brand Elements:\n- **Color Palette**: Clean whites, soft pastels, natural earth tones.\n- **Lighting**: Soft, natural, professional studio quality.\n- **Composition**: Minimalist, premium, with negative space.\n- **Models**: Diverse, authentic, with a focus on healthy-looking skin.\n- **Mood**: Trustworthy, aspirational, scientifically-backed.\n\n## Output Requirements:\nReturn ONLY the crafted image prompt text, optimized for:\n- DALL-E 3 compatibility.\n- A 9:16 vertical aspect ratio.\n- Enterprise brand standards and Story-first engagement."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [280, -100],
      "id": "9f626a4b-3dd1-4278-8f43-90892423ec67",
      "name": "Enterprise Visual Creator"
    },
    {
      "parameters": {
        "resource": "image",
        "model": "gpt-image-1",
        "prompt": "={{ $json.output }}",
        "options": {
          "size": "1024x1792"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [700, -100],
      "id": "f6155272-8d84-4bf0-8d2f-918f77fe3ec5",
      "name": "Enterprise Image Generation",
      "retryOnFail": true,
      "waitBetweenTries": 2000,
      "credentials": {
        "openAiApi": {
          "id": "lAcEJc06aCiCIRiF",
          "name": "OpenAi accountFINAL"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://nurdldgqxseunotmygzn.supabase.co/storage/v1/object/content-assets/enterprise/{{ $execution.id }}/generated-story.png",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im51cmRsZGdxeHNldW5vdG15Z3puIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0ODIxMDUxNCwiZXhwIjoyMDYzNzg2NTE0fQ.xsrrxjpMbKMdcJ_e_6DiBwz9eLLj3YziKE7UrTqhVCo"
            },
            {
              "name": "Content-Type",
              "value": "image/png"
            }
          ]
        },
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "data",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [880, -80],
      "id": "357f7a0b-682f-478c-ba4d-e840034a6825",
      "name": "Store Enterprise Image",
      "credentials": {
        "httpHeaderAuth": {
          "id": "t0Vk9fjgaIrAz1Kl",
          "name": "SupaBase"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// üè¢ ENTERPRISE SUPABASE URL GENERATOR\nconst storeImageData = $input.first().json;\nconst enterpriseData = $('Enterprise Input Trigger').first().json;\n\nconst bucketName = 'content-assets';\nconst filePath = `enterprise/${$execution.id}/generated-story.png`;\nconst publicUrl = `https://nurdldgqxseunotmygzn.supabase.co/storage/v1/object/public/${bucketName}/${filePath}`;\n\nconst enterpriseMetadata = {\n  file_url: publicUrl,\n  storage_path: filePath,\n  content_strategy: enterpriseData.contentStrategy || 'premium',\n  priority_level: enterpriseData.priority || 'high',\n  workflow_version: '2.2_enterprise_story',\n};\n\nreturn [{ json: enterpriseMetadata }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [720, 140],
      "id": "35bbbc15-34ac-4977-b6fc-74e6b430ac2a",
      "name": "Generate Enterprise URL"
    },
    {
      "parameters": {
        "tableId": "content_workflows",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "execution_id",
              "fieldValue": "={{ $execution.id }}"
            },
            {
              "fieldId": "workflow_type",
              "fieldValue": "createStory_Enterprise"
            },
            {
              "fieldId": "current_state",
              "fieldValue": "INITIAL"
            },
            {
              "fieldId": "user_id",
              "fieldValue": "={{ $('Enterprise Input Trigger').first().json.chatID }}"
            },
            {
              "fieldId": "chat_id",
              "fieldValue": "={{ $('Enterprise Input Trigger').first().json.chatID }}"
            },
            {
              "fieldId": "input_data",
              "fieldValue": "={{ JSON.stringify($('Enterprise Input Trigger').first().json) }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [-140, 40],
      "id": "65e45605-64f9-4117-9729-622f3ece2119",
      "name": "Enterprise Workflow Registry",
      "credentials": {
        "supabaseApi": {
          "id": "DILZN3aAMdS9FL24",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// üè¢ ENTERPRISE STATE COORDINATOR INITIALIZATION\nconst supabaseWorkflow = $('Enterprise Workflow Registry').first().json;\nconst inputData = $('Enterprise Input Trigger').first().json;\n\n// Enterprise StateCoordinator Data Package\nconst enterpriseStateData = {\n  action: 'create',\n  execution_id: $execution.id,\n  workflow_data: {\n    workflow_type: 'createStory_Enterprise',\n    workflow_version: '2.2_enterprise_story',\n    current_state: 'INITIAL',\n    current_phase: 'enterprise_image_generation',\n    chat_id: inputData.chatID,\n    user_id: inputData.chatID,\n    input_data: inputData,\n    supabase_workflow_id: supabaseWorkflow.id,\n    enterprise_config: {\n      content_strategy: inputData.contentStrategy || 'premium',\n      priority_level: inputData.priority || 'high',\n      enterprise_mode: true,\n      quality_threshold: 0.80 // Stories have a slightly different quality gate\n    }\n  }\n};\n\nreturn [{ json: { ...inputData, enterprise_state_data: enterpriseStateData, supabase_id: supabaseWorkflow.id } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [40, 40],
      "id": "23ff361c-b4c8-47f2-b427-c10b6021b5b4",
      "name": "Initialize Enterprise StateCoordinator"
    },
    {
      "parameters": {
        "tableId": "content_assets",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "workflow_id",
              "fieldValue": "={{ $('Enterprise Workflow Registry').first().json.id }}"
            },
            {
              "fieldId": "execution_id",
              "fieldValue": "={{ $execution.id }}"
            },
            {
              "fieldId": "asset_type",
              "fieldValue": "enterprise_generated_story"
            },
            {
              "fieldId": "file_url",
              "fieldValue": "={{ $('Generate Enterprise URL').first().json.file_url }}"
            },
            {
              "fieldId": "file_metadata",
              "fieldValue": "={{ JSON.stringify({prompt_used: $('Enterprise Visual Creator').first().json.output, openai_response: $('Enterprise Image Generation').first().json.data, generation_model: $('Enterprise Image Generation').first().json.model, content_strategy: $('Generate Enterprise URL').first().json.content_strategy, priority_level: $('Generate Enterprise URL').first().json.priority_level, enterprise_mode: true}) }}"
            },
            {
              "fieldId": "created_at",
              "fieldValue": "={{ $now.toISODate() }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [40, 200],
      "id": "3aac1891-3ec3-46c1-8bad-ea9997baf978",
      "name": "Save Enterprise Image Asset",
      "credentials": {
        "supabaseApi": {
          "id": "DILZN3aAMdS9FL24",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// üè¢ ENTERPRISE STATE UPDATE - IMAGE GENERATED\nconst imageData = $('Generate Enterprise URL').first().json;\n\nconst enterpriseStateUpdate = {\n  ...imageData,\n  current_state: 'IMAGE_GENERATED',\n  previous_state: 'INITIAL',\n  updated_at: new Date().toISOString()\n};\n\nreturn [{ json: enterpriseStateUpdate }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [240, 140],
      "id": "0adf1ac4-9e9b-4947-8d81-f88171d92dc5",
      "name": "Update Enterprise State - Image Generated"
    },
    {
      "parameters": {
        "operation": "sendPhoto",
        "chatId": "={{ $('Enterprise Input Trigger').item.json.chatID }}",
        "file": "={{ $('Generate Enterprise URL').first().json.file_url }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "‚úÖ Perfect!",
                    "additionalFields": {
                      "callback_data": "=AIP_{{ $execution.id }}_image-approval"
                    }
                  },
                  {
                    "text": "‚úèÔ∏è Verbeteren",
                    "additionalFields": {
                      "callback_data": "=MIP_{{ $execution.id }}_image-approval"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "caption": "=üé® Nieuwe Instagram Story gegenereerd!\nüìà **Strategy:** {{ $('Generate Enterprise URL').first().json.content_strategy.toUpperCase() }}\nüìä **Priority:** {{ $('Generate Enterprise URL').first().json.priority_level.toUpperCase() }}\n\n‚è∞ Wat vind je van deze afbeelding?"
        }
      },
      "id": "1ff9287c-9c9d-49d0-b56a-68679cfabcba",
      "name": "Enterprise Telegram Image Review",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [580, 60],
      "webhookId": "enterprise-image-review",
      "credentials": {
        "telegramApi": {
          "id": "ioh9vLdQ3pzyX0kw",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "resume": "webhook",
        "httpMethod": "POST",
        "options": {
          "webhookSuffix": "enterprise-image-approval"
        }
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [920, 140],
      "id": "63dc135c-44eb-498a-bffa-00fa9778f121",
      "name": "Wait for Enterprise Image Approval",
      "webhookId": "1b128f16-3110-490e-b3fe-2096c15e6b50"
    },
    {
      "parameters": {
        "jsCode": "// üî¨ ENTERPRISE CALLBACK DEBUG & FIX\nconst webhookData = $input.first().json;\n\n// Check if webhookData has body property\nif (webhookData.body) {\n    const bodyData = webhookData.body;\n    return [{ json: { ...bodyData, phase: 'enterprise_image_approval' } }];\n} else {\n    return [{ json: { ...webhookData, phase: 'enterprise_image_approval' } }];\n}"
      },
      "id": "0b60f56e-adb0-4383-91a7-d5d79c5a4cd7",
      "name": "Process Enterprise Image Callback",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [60, 560]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.action }}",
                    "rightValue": "approved",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Approved"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.action }}",
                    "rightValue": "modify",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Modify"
            }
          ]
        },
        "options": {}
      },
      "id": "9136005e-468b-4eb6-b3a5-11afb81e7ab1",
      "name": "Enterprise Image Action Router",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [220, 560]
    },
    {
      "parameters": {
        "jsCode": "// üè¢ ENTERPRISE REGENERATE IMAGE PROCESSOR\nconst callbackData = $input.first().json;\nconst feedback = callbackData.feedback || '';\n\n// Get original enterprise input data\nconst originalInputs = $('Enterprise Input Trigger').first().json;\n\n// Enterprise Modify Prompt Generation\nlet enterpriseModifyPrompt;\nif (feedback && feedback.trim()) {\n  enterpriseModifyPrompt = `Story Topic: ${originalInputs.storyTopic}\\nStory Context: ${originalInputs.storyContext}\\nContent Strategy: ${originalInputs.contentStrategy || 'premium'}\\n\\nUser Feedback: ${feedback}\\n\\nPlease create a refined enterprise-grade Instagram Story (9:16) image prompt based on this feedback.`;\n} else {\n  enterpriseModifyPrompt = `Story Topic: ${originalInputs.storyTopic}\\nStory Context: ${originalInputs.storyContext}\\nContent Strategy: ${originalInputs.contentStrategy || 'premium'}\\n\\nCreate a new enterprise-grade variation of this Story (9:16) image prompt with fresh creative elements.`;\n}\n\nreturn [{ json: { output: enterpriseModifyPrompt } }];"
      },
      "id": "a8573dd6-8f49-4b36-a982-2b329fc824d0",
      "name": "Prepare Enterprise Regenerate Image",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [400, 680]
    },
    {
      "parameters": {
        "jsCode": "// üè¢ GET ENTERPRISE STATE COORDINATOR DATA\nconst stateData = {\n  execution_id: $execution.id,\n  current_state: 'IMAGE_APPROVED',\n  workflow_type: 'createStory_Enterprise',\n  input_data: $('Enterprise Input Trigger').first().json,\n  output_data: {\n    image_url: $('Generate Enterprise URL').first().json.file_url,\n    prompt_used: $('Enterprise Visual Creator').first().json.output,\n    content_strategy: $('Generate Enterprise URL').first().json.content_strategy,\n    priority_level: $('Generate Enterprise URL').first().json.priority_level\n  }\n};\n\nreturn [{ json: { state_data: stateData } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [440, 500],
      "id": "99f29856-fe7e-47f2-a5fa-6570d60dc16b",
      "name": "Get Enterprise StateCoordinator Data"
    },
    {
      "parameters": {
        "model": "anthropic/claude-sonnet-4",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [580, 560],
      "id": "230d5ade-1319-4447-b954-0b67b7572cda",
      "name": "Enterprise Content Model",
      "credentials": {
        "openRouterApi": {
          "id": "ht1g53zw1Z9E7nlN",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Analyze this enterprise Story image and create optimized Dutch content:\n\nImage: {{ $('Get Enterprise StateCoordinator Data').first().json.state_data.output_data.image_url }}\nOriginal Topic: {{ $('Get Enterprise StateCoordinator Data').first().json.state_data.input_data.storyTopic }}\n\nCreate enterprise-level overlay text for the Story.\n\nReturn as JSON format.",
        "options": {
          "systemMessage": "# Enterprise Instagram Story Content Creator v2.2\n\nYou are an advanced Enterprise Instagram content creator optimized for vertical, short-form content.\n\n## Mission:\nCreate enterprise-level overlay text for an Instagram Story that is concise, engaging, and drives action.\n\n## Enterprise Story Text Requirements:\n- **Concise**: Max 1-2 short sentences.\n- **High-Impact**: Immediately understandable and attention-grabbing.\n- **CTA-Oriented**: Should encourage a tap, swipe, or other interaction where applicable.\n- **Brand Voice**: Aligned with SkinClarity Club's expert, empowering, and accessible premium voice.\n\n## Dutch Language Excellence:\n- **Conversational Dutch**: Natural, engaging 'jij' form.\n- **Premium terminology**: Elevated but accessible language.\n\n## Enterprise Output Format (JSON):\n```json\n{\n  \"story_text\": {\n    \"line1\": \"Korte, pakkende tekstregel 1.\",\n    \"line2\": \"Optionele regel 2 of CTA.\"\n  },\n  \"performance_prediction\": {\n    \"tap_through_rate\": 0.92,\n    \"engagement_potential\": \"high\"\n  }\n}\n```\n\n**Focus**: Create text that maximizes impact in the few seconds a user views a Story."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [800, 620],
      "id": "7cd6060c-84b1-428e-b976-1010a0724181",
      "name": "Enterprise Content Creator",
      "retryOnFail": true,
      "maxTries": 2,
      "waitBetweenTries": 5000,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// üè¢ ENTERPRISE CONTENT DATA PREPARATION\nconst rawOutput = $input.first().json.output;\nconst stateData = $('Get Enterprise StateCoordinator Data').first().json.state_data;\n\n// Clean and parse JSON output\nconst cleanJson = rawOutput.replace(/```json\\n?/g, '').replace(/```\\n?/g, '');\nlet contentData;\ntry {\n    contentData = JSON.parse(cleanJson);\n} catch (error) {\n    throw new Error(\"Enterprise content parsing failed\");\n}\n\n// Enterprise Content Package\nconst enterpriseContentPackage = {\n    line1: contentData.story_text.line1,\n    line2: contentData.story_text.line2,\n    imageUrl: stateData.output_data.image_url,\n    execution_id: stateData.execution_id,\n    content_strategy: stateData.output_data.content_strategy,\n    priority_level: stateData.output_data.priority_level,\n    performance_prediction: contentData.performance_prediction,\n    source_state_data: stateData\n};\n\nreturn [{ json: enterpriseContentPackage }];"
      },
      "id": "39758334-7e1a-42f5-9d14-672f4d755b82",
      "name": "Prepare Enterprise Content Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [980, 440]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.placid.app/api/rest/images",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"template_uuid\": \"your_story_template_uuid\",\n  \"create_now\": true,\n  \"layers\": {\n    \"line1\": {\n      \"text\": \"{{ $json.line1 }}\"\n    },\n    \"line2\": {\n      \"text\": \"{{ $json.line2 }}\"\n    },\n    \"img\": {\n      \"image\": \"{{ $json.imageUrl }}\"\n    }\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1160, 440],
      "id": "da7f9aa1-ba9a-4fa4-a280-c63e8fba1131",
      "name": "Create Enterprise Final Story Image",
      "retryOnFail": true,
      "waitBetweenTries": 3000,
      "maxTries": 2,
      "credentials": {
        "httpHeaderAuth": {
          "id": "tY4cJaC6fBEnWZOB",
          "name": "Placid"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// üè¢ ENTERPRISE STATE UPDATE - CONTENT GENERATED\nconst placidData = $('Create Enterprise Final Story Image').first().json;\nconst contentData = $('Prepare Enterprise Content Data').first().json;\n\n// Enterprise State Update Data\nconst enterpriseStateUpdate = {\n    execution_id: contentData.execution_id,\n    current_state: 'CONTENT_GENERATED',\n    output_data: {\n        final_story: {\n            image_url: placidData.image_url,\n            placid_id: placidData.id,\n            line1: contentData.line1,\n            line2: contentData.line2\n        },\n        performance_prediction: contentData.performance_prediction,\n        content_strategy: contentData.content_strategy\n    },\n    updated_at: new Date().toISOString()\n};\n\nreturn [{ json: { updated_state: enterpriseStateUpdate } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1160, 660],
      "id": "10b2cf60-7df3-44bb-9bc1-269f87783648",
      "name": "Update Enterprise State - Content Generated"
    },
    {
      "parameters": {
        "operation": "sendPhoto",
        "chatId": "={{ $('Enterprise Input Trigger').item.json.chatID }}",
        "file": "={{ $('Create Enterprise Final Story Image').first().json.image_url }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "üöÄ Publiceer!",
                    "additionalFields": {
                      "callback_data": "=AFP_{{ $execution.id }}_final-approval"
                    }
                  },
                  {
                    "text": "üìù Verbeter tekst",
                    "additionalFields": {
                      "callback_data": "=MFP_{{ $execution.id }}_final-approval"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "id": "33e0dd19-f2fb-46e8-91b5-7da3eee01656",
      "name": "Enterprise Telegram Final Review",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [1560, 660],
      "webhookId": "enterprise-final-review",
      "credentials": {
        "telegramApi": {
          "id": "ioh9vLdQ3pzyX0kw",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "resume": "webhook",
        "httpMethod": "POST",
        "options": {
          "webhookSuffix": "enterprise-final-approval"
        }
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [1780, 460],
      "id": "059782ca-5cc7-472c-9a02-139f760dcc76",
      "name": "Wait for Enterprise Final Approval",
      "webhookId": "1b128f16-3110-490e-b3fe-2096c15e6b50"
    },
    {
      "parameters": {
        "jsCode": "// Process callback data\nconst inputData = $input.first().json;\nconst telegramData = inputData.body || inputData;\n\nlet action = '';\nif (telegramData.action) {\n    action = telegramData.action;\n} else if (telegramData.callback_query && telegramData.callback_query.data) {\n    const callbackData = telegramData.callback_query.data;\n    if (callbackData.includes('approve')) {\n        action = 'approved';\n    } else if (callbackData.includes('modify')) {\n        action = 'modify';\n    }\n}\n\nreturn [{ json: { action: action, execution_id: inputData.execution_id } }];"
      },
      "id": "c482c9a7-1ed4-419b-913a-a81946a28806",
      "name": "Process Enterprise Final Callback",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1160, 140]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.action }}",
                    "rightValue": "approved",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Approved"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.action }}",
                    "rightValue": "modify",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Modify"
            }
          ]
        },
        "options": {}
      },
      "id": "aa18fa19-07a3-437b-9108-3b0fa3865213",
      "name": "Enterprise Final Action Router",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [1340, 140]
    },
    {
      "parameters": {
        "jsCode": "// üè¢ ENTERPRISE REGENERATE FINAL PROCESSOR\nconst callbackData = $input.first().json;\nconst feedback = callbackData.feedback || '';\nconst stateData = $('Get Enterprise StateCoordinator Data').first().json.state_data;\n\nlet enterpriseContentPrompt;\nif (feedback && feedback.trim()) {\n  enterpriseContentPrompt = `Analyze this enterprise Story image and create optimized Dutch content:\\n\\nImage: ${stateData.output_data.image_url}\\nOriginal Topic: ${stateData.input_data.storyTopic}\\n\\nUser Feedback: ${feedback}\\n\\nPlease modify the enterprise-level overlay text based on this feedback.\\n\\nReturn as JSON format.`;\n} else {\n  enterpriseContentPrompt = `Analyze this enterprise Story image and create optimized Dutch content:\\n\\nImage: ${stateData.output_data.image_url}\\nOriginal Topic: ${stateData.input_data.storyTopic}\\n\\nCreate a completely new enterprise-grade variation of the overlay text for this image.\\n\\nReturn as JSON format.`;\n}\n\nreturn [{ json: { output: enterpriseContentPrompt } }];"
      },
      "id": "41d29520-ac7b-4dc2-8a97-f21c6b3cc168",
      "name": "Prepare Enterprise Regenerate Final",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1160, -60]
    },
    {
      "parameters": {
        "jsCode": "// üè¢ COMPLETE ENTERPRISE WORKFLOW\nconst currentStateData = $('Update Enterprise State - Content Generated').first().json.updated_state || {};\n\nconst enterpriseCompletionData = {\n    execution_id: $execution.id,\n    current_state: 'COMPLETED',\n    final_story: currentStateData.output_data?.final_story || {},\n    completed_at: new Date().toISOString(),\n    enterprise_results: {\n        workflow_version: '2.2_enterprise_story',\n        content_strategy: currentStateData.output_data?.content_strategy,\n        performance_prediction: currentStateData.output_data?.performance_prediction,\n        workflow_success: true\n    }\n};\n\nreturn [{ json: enterpriseCompletionData }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1440, -40],
      "id": "77340e47-2700-43e1-bd79-a4d21c0a295e",
      "name": "Complete Enterprise Workflow"
    },
    {
      "parameters": {
        "chatId": "={{ $('Enterprise Input Trigger').first().json.chatID }}",
        "text": "=üè¢ **ENTERPRISE STORY COMPLETED!**\n\nüéâ **Success!** Je Instagram Story is klaar!\nüìà **Strategy:** {{ $json.enterprise_results.content_strategy.toUpperCase() }}\nüöÄ **Ready for Publication!**\n\nüÜî Execution ID: {{ $json.execution_id }}\nüè¢ Workflow: StoryBuilder v2.2",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "9dfdacb9-b246-4255-807b-1145d9728ea3",
      "name": "Enterprise Success Notification",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [1920, 60],
      "webhookId": "enterprise-success-notification",
      "credentials": {
        "telegramApi": {
          "id": "ioh9vLdQ3pzyX0kw",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "team": "90151264028",
        "space": "90155049265",
        "folder": "90157459408",
        "list": "901511913287",
        "name": "=üìù Story: {{ $('Enterprise Input Trigger').first().json.storyTopic }}",
        "additionalFields": {
          "customFieldsJson": "={ \n  \"execution_id\": \"{{ $execution.id }}\",\n  \"content_strategy\": \"{{ $('Enterprise Input Trigger').first().json.contentStrategy || 'premium' }}\",\n  \"workflow_version\": \"2.2_enterprise_story\",\n  \"current_phase\": \"image_generation\",\n  \"chat_id\": \"{{ $('Enterprise Input Trigger').first().json.chatID }}\"\n}",
          "content": "=üè¢ Enterprise StoryBuilder gestart!\n- **Topic:** {{ $('Enterprise Input Trigger').first().json.storyTopic }}\n- **Strategy:** {{ $('Enterprise Input Trigger').first().json.contentStrategy || 'premium' }}\n- **Priority:** {{ $('Enterprise Input Trigger').first().json.priority || 'high' }}",
          "priority": "={{ $('Enterprise Input Trigger').first().json.contentStrategy === 'campaign' ? 4 : 3 }}",
          "startDate": "={{ $now.toISODate() }}",
          "status": "planning"
        }
      },
      "type": "n8n-nodes-base.clickUp",
      "typeVersion": 1,
      "position": [-140, 220],
      "id": "40a87820-9b18-490a-bb8b-c2ed3126f81e",
      "name": "Create ClickUp Task",
      "credentials": {
        "clickUpApi": {
          "id": "3GNKK7vXdnhoVmRl",
          "name": "ClickUp"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $('Create ClickUp Task').first().json.id }}",
        "updateFields": {
          "content": "=üñºÔ∏è Story afbeelding gegenereerd en klaar voor review!\nüìä Image URL: {{ $('Generate Enterprise URL').first().json.file_url }}\nüìà Strategy: {{ $('Generate Enterprise URL').first().json.content_strategy }}\n‚è∞ Image ready: {{ $now.toISO() }}",
          "name": "=üìù Story: {{ $('Enterprise Input Trigger').first().json.storyTopic }} - Image Ready",
          "status": "IMAGE REVIEW"
        }
      },
      "type": "n8n-nodes-base.clickUp",
      "typeVersion": 1,
      "position": [440, 200],
      "id": "0ab6dbb9-2673-4531-b9b5-ac914cfacec0",
      "name": "Update Task - Image Ready",
      "credentials": {
        "clickUpApi": {
          "id": "3GNKK7vXdnhoVmRl",
          "name": "ClickUp"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $('Create ClickUp Task').first().json.id }}",
        "updateFields": {
          "content": "=üìù Content gegenereerd en finale story image klaar!\nüñºÔ∏è Final Image: {{ $('Create Enterprise Final Story Image').first().json.image_url }}\nüìà Strategy: {{ $('Prepare Enterprise Content Data').first().json.content_strategy }}\n‚è∞ Content ready: {{ $now.toISO() }}",
          "name": "=üìù Story: {{ $('Enterprise Input Trigger').first().json.storyTopic }} - Content Ready",
          "status": "FINAL REVIEW"
        }
      },
      "type": "n8n-nodes-base.clickUp",
      "typeVersion": 1,
      "position": [1360, 660],
      "id": "3ffacb2b-bfe2-4498-90fc-943578ba6069",
      "name": "Update Task - Content Ready",
      "credentials": {
        "clickUpApi": {
          "id": "3GNKK7vXdnhoVmRl",
          "name": "ClickUp"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $('Create ClickUp Task').first().json.id }}",
        "updateFields": {
          "content": "=üèÜ Enterprise workflow succesvol voltooid!\nüìà Strategy: {{ $json.enterprise_results.content_strategy.toUpperCase() }}\nüöÄ READY FOR PUBLICATION!\n‚è∞ Completed: {{ $now.toISO() }}",
          "name": "=üöÄ Story: {{ $('Enterprise Input Trigger').first().json.storyTopic }} - READY TO PUBLISH",
          "status": "READY TO PUBLISH"
        }
      },
      "type": "n8n-nodes-base.clickUp",
      "typeVersion": 1,
      "position": [1560, 200],
      "id": "f0721343-98a0-45a4-93ed-e28c4390c32f",
      "name": "Update Task - Content Ready1",
      "credentials": {
        "clickUpApi": {
          "id": "3GNKK7vXdnhoVmRl",
          "name": "ClickUp"
        }
      }
    },
    {
      "parameters": {
        "content": "# üè¢ FASE 1: Image Generation",
        "height": 580,
        "width": 1260,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [-180, -160],
      "id": "0a43473b-4aa1-44b4-b311-ee8518800d0c",
      "name": "Enterprise Phase 1"
    },
    {
      "parameters": {
        "content": "# üìä FASE 2: Template + Caption Creation",
        "height": 440,
        "width": 1940,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [0, 440],
      "id": "46c73d43-cce3-4290-941e-79b1287df4f3",
      "name": "Enterprise Phase 2"
    },
    {
      "parameters": {
        "content": "# üöÄ FASE 3: Final Review & Completion",
        "height": 580,
        "width": 960,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [1100, -160],
      "id": "fc499bd4-df12-4e65-9c0f-1340cb7d028d",
      "name": "Enterprise Phase 3"
    }
  ],
  "pinData": {
    "Enterprise Input Trigger": [
      {
        "json": {
          "storyTopic": "Achter de schermen bij SkinClarity",
          "storyContext": "Een snelle, authentieke blik op ons lab, de ingredi√´nten en het team.",
          "chatID": "7543174110",
          "contentStrategy": "standard",
          "priority": "normal"
        }
      }
    ]
  },
  "connections": {
    "Enterprise Input Trigger": {
      "main": [
        [
          {
            "node": "Initialize Enterprise StateCoordinator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enterprise Visual Model": {
      "ai_languageModel": [
        [
          {
            "node": "Enterprise Visual Creator",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Enterprise Visual Creator": {
      "main": [
        [
          {
            "node": "Enterprise Image Generation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enterprise Image Generation": {
      "main": [
        [
          {
            "node": "Store Enterprise Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Store Enterprise Image": {
      "main": [
        [
          {
            "node": "Generate Enterprise URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Enterprise URL": {
      "main": [
        [
          {
            "node": "Save Enterprise Image Asset",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enterprise Workflow Registry": {
      "main": [
        [
          {
            "node": "Create ClickUp Task",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Initialize Enterprise StateCoordinator": {
      "main": [
        [
          {
            "node": "Enterprise Visual Creator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Enterprise Image Asset": {
      "main": [
        [
          {
            "node": "Update Enterprise State - Image Generated",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Enterprise State - Image Generated": {
      "main": [
        [
          {
            "node": "Update Task - Image Ready",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enterprise Telegram Image Review": {
      "main": [
        [
          {
            "node": "Wait for Enterprise Image Approval",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for Enterprise Image Approval": {
      "main": [
        [
          {
            "node": "Process Enterprise Image Callback",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Enterprise Image Callback": {
      "main": [
        [
          {
            "node": "Enterprise Image Action Router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enterprise Image Action Router": {
      "main": [
        [
          {
            "node": "Get Enterprise StateCoordinator Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Prepare Enterprise Regenerate Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Enterprise Regenerate Image": {
      "main": [
        [
          {
            "node": "Enterprise Visual Creator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Enterprise StateCoordinator Data": {
      "main": [
        [
          {
            "node": "Enterprise Content Creator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enterprise Content Model": {
      "ai_languageModel": [
        [
          {
            "node": "Enterprise Content Creator",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Enterprise Content Creator": {
      "main": [
        [
          {
            "node": "Prepare Enterprise Content Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Enterprise Content Data": {
      "main": [
        [
          {
            "node": "Create Enterprise Final Story Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Enterprise Final Story Image": {
      "main": [
        [
          {
            "node": "Update Enterprise State - Content Generated",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Enterprise State - Content Generated": {
      "main": [
        [
          {
            "node": "Update Task - Content Ready",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enterprise Telegram Final Review": {
      "main": [
        [
          {
            "node": "Wait for Enterprise Final Approval",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for Enterprise Final Approval": {
      "main": [
        [
          {
            "node": "Process Enterprise Final Callback",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Enterprise Final Callback": {
      "main": [
        [
          {
            "node": "Enterprise Final Action Router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enterprise Final Action Router": {
      "main": [
        [
          {
            "node": "Complete Enterprise Workflow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Prepare Enterprise Regenerate Final",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Enterprise Regenerate Final": {
      "main": [
        [
          {
            "node": "Enterprise Content Creator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Complete Enterprise Workflow": {
      "main": [
        [
          {
            "node": "Update Task - Content Ready1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Task - Image Ready": {
      "main": [
        [
          {
            "node": "Enterprise Telegram Image Review",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Task - Content Ready": {
      "main": [
        [
          {
            "node": "Enterprise Telegram Final Review",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Task - Content Ready1": {
      "main": [
        [
          {
            "node": "Enterprise Success Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "4a6bd637-4e80-49b9-9007-1104013696d7",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "dfdd26cd27fe046d045e60df6b98f78e52a497ca304bdcb672e06512ba750a2c"
  },
  "id": "ZVf435PkhUlwRA3J",
  "tags": []
}
