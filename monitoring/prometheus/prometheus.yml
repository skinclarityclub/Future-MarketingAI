# ====================================================================
# Prometheus Configuration for SKC BI Dashboard
# Task 41.1: Metrics collection configuration
# ====================================================================

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: "skc-bi-dashboard"
    environment: "production"

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'
rule_files:
  - "rules/*.yml"

# Scrape configuration for various targets
scrape_configs:
  # ====================================================================
  # PROMETHEUS ITSELF
  # ====================================================================
  - job_name: "prometheus"
    static_configs:
      - targets: ["localhost:9090"]
    metrics_path: "/metrics"
    scrape_interval: 5s

  # ====================================================================
  # NODE EXPORTER - System Metrics
  # ====================================================================
  - job_name: "node-exporter"
    static_configs:
      - targets: ["node-exporter:9100"]
    scrape_interval: 10s
    metrics_path: "/metrics"

  # ====================================================================
  # CADVISOR - Container Metrics
  # ====================================================================
  - job_name: "cadvisor"
    static_configs:
      - targets: ["cadvisor:8080"]
    scrape_interval: 10s
    metrics_path: "/metrics"

  # ====================================================================
  # ALERTMANAGER
  # ====================================================================
  - job_name: "alertmanager"
    static_configs:
      - targets: ["alertmanager:9093"]
    scrape_interval: 30s

  # ====================================================================
  # GRAFANA METRICS
  # ====================================================================
  - job_name: "grafana"
    static_configs:
      - targets: ["grafana:3000"]
    scrape_interval: 30s
    metrics_path: "/metrics"

  # ====================================================================
  # JAEGER METRICS
  # ====================================================================
  - job_name: "jaeger"
    static_configs:
      - targets: ["jaeger:14269"]
    scrape_interval: 30s
    metrics_path: "/metrics"

  # ====================================================================
  # OTEL COLLECTOR METRICS
  # ====================================================================
  - job_name: "otel-collector"
    static_configs:
      - targets: ["otel-collector:8889"]
    scrape_interval: 15s
    metrics_path: "/metrics"

  # ====================================================================
  # BLACKBOX EXPORTER - External Service Monitoring
  # ====================================================================
  - job_name: "blackbox"
    static_configs:
      - targets: ["blackbox-exporter:9115"]
    scrape_interval: 30s

  # Blackbox HTTP probes
  - job_name: "blackbox-http"
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
          - https://www.google.com
          - https://httpbin.org/status/200
          - http://localhost:3000 # Main application
          - http://grafana:3000 # Grafana
          - http://kibana:5601 # Kibana
          - http://jaeger:16686 # Jaeger UI
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # Blackbox ICMP probes
  - job_name: "blackbox-icmp"
    metrics_path: /probe
    params:
      module: [icmp]
    static_configs:
      - targets:
          - 8.8.8.8
          - 1.1.1.1
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # ====================================================================
  # DATABASE EXPORTERS
  # ====================================================================
  - job_name: "postgres-exporter"
    static_configs:
      - targets: ["postgres-exporter:9187"]
    scrape_interval: 30s

  - job_name: "redis-exporter"
    static_configs:
      - targets: ["redis-exporter:9121"]
    scrape_interval: 30s

  # ====================================================================
  # TRAEFIK METRICS
  # ====================================================================
  - job_name: "traefik"
    static_configs:
      - targets: ["traefik:8080"]
    scrape_interval: 30s
    metrics_path: "/metrics"

  # ====================================================================
  # NEXT.JS APPLICATION METRICS
  # ====================================================================
  - job_name: "nextjs-app"
    static_configs:
      - targets: ["host.docker.internal:3000"] # Adjust based on your setup
    scrape_interval: 15s
    metrics_path: "/api/metrics" # We'll create this endpoint
    scheme: "http"

  # ====================================================================
  # SUPABASE METRICS (if self-hosted)
  # ====================================================================
  - job_name: "supabase-postgres"
    static_configs:
      - targets: ["your-supabase-host:5432"] # Adjust based on your setup
    scrape_interval: 30s
    metrics_path: "/metrics"

  # ====================================================================
  # CUSTOM APPLICATION METRICS
  # ====================================================================
  - job_name: "skc-api-metrics"
    static_configs:
      - targets: ["host.docker.internal:3000"]
    scrape_interval: 15s
    metrics_path: "/api/admin/metrics"
    scheme: "http"

  # ====================================================================
  # KUBERNETES METRICS (if deployed on K8s)
  # ====================================================================
  # Uncomment and configure if using Kubernetes deployment
  # - job_name: 'kubernetes-apiservers'
  #   kubernetes_sd_configs:
  #   - role: endpoints
  #   scheme: https
  #   tls_config:
  #     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  #   bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  #   relabel_configs:
  #   - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
  #     action: keep
  #     regex: default;kubernetes;https

  # ====================================================================
  # ELASTICSEARCH METRICS
  # ====================================================================
  - job_name: "elasticsearch"
    static_configs:
      - targets: ["elasticsearch:9200"]
    scrape_interval: 30s
    metrics_path: "/_prometheus/metrics"

  # ====================================================================
  # CUSTOM SERVICE DISCOVERY (Docker)
  # ====================================================================
  - job_name: "docker-containers"
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 30s
    relabel_configs:
      # Only scrape containers with the prometheus scrape label
      - source_labels: [__meta_docker_container_label_prometheus_scrape]
        action: keep
        regex: true
      # Use custom metrics path if specified
      - source_labels: [__meta_docker_container_label_prometheus_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      # Use custom port if specified
      - source_labels:
          [__address__, __meta_docker_container_label_prometheus_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      # Set job name from container label
      - source_labels: [__meta_docker_container_label_prometheus_job]
        action: replace
        target_label: job
      # Add container name as label
      - source_labels: [__meta_docker_container_name]
        action: replace
        target_label: container_name
        regex: /(.*)
        replacement: $1
# ====================================================================
# REMOTE WRITE (for long-term storage or federation)
# ====================================================================
# Uncomment and configure for remote storage solutions like Thanos, Cortex, or cloud providers
# remote_write:
#   - url: "https://your-remote-storage-endpoint/api/v1/write"
#     basic_auth:
#       username: "your-username"
#       password: "your-password"
#     queue_config:
#       max_samples_per_send: 1000
#       max_shards: 200
#       capacity: 2500

# ====================================================================
# REMOTE READ (for federated queries)
# ====================================================================
# remote_read:
#   - url: "https://your-remote-storage-endpoint/api/v1/read"
#     basic_auth:
#       username: "your-username"
#       password: "your-password"

# ====================================================================
# TRACING CONFIGURATION (if using Prometheus with Jaeger)
# ====================================================================
# tracing:
#   endpoint: "jaeger:14268/api/traces"
#   insecure: true
