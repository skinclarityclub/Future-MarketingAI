#!/bin/bash

# ML Auto-Retraining System Setup Script
# Task 71.5: Automatiseer retraining en deployment van ML-modellen

echo "🚀 Setting up ML Auto-Retraining System..."
echo "==============================================="

# Check if required tools are installed
check_requirements() {
    echo "📋 Checking requirements..."
    
    if ! command -v psql &> /dev/null; then
        echo "❌ PostgreSQL client (psql) not found. Please install PostgreSQL."
        exit 1
    fi
    
    if ! command -v node &> /dev/null; then
        echo "❌ Node.js not found. Please install Node.js."
        exit 1
    fi
    
    if ! command -v npm &> /dev/null; then
        echo "❌ npm not found. Please install npm."
        exit 1
    fi
    
    echo "✅ All requirements met!"
}

# Setup database
setup_database() {
    echo "🗄️ Setting up database..."
    
    if [ -z "$DATABASE_URL" ]; then
        echo "⚠️ DATABASE_URL not set. Please set it in your .env file."
        read -p "Enter your database URL: " DATABASE_URL
    fi
    
    echo "Running migration..."
    if psql "$DATABASE_URL" -f migrations/050_ml_auto_retraining_system.sql; then
        echo "✅ Database migration completed!"
    else
        echo "❌ Database migration failed!"
        exit 1
    fi
}

# Setup environment variables
setup_environment() {
    echo "🔧 Setting up environment variables..."
    
    if [ ! -f .env.local ]; then
        echo "Creating .env.local file..."
        cat > .env.local << EOF
# ML Auto-Retraining System Configuration
# Generated by setup script on $(date)

# Supabase Configuration
SUPABASE_URL=your_supabase_url_here
SUPABASE_ANON_KEY=your_supabase_anon_key_here

# n8n Configuration
N8N_WEBHOOK_URL=http://localhost:5678/webhook/ml-retraining
N8N_API_URL=http://localhost:5678/api/v1

# Notification Configuration
SLACK_WEBHOOK_URL=your_slack_webhook_url_here
EMAIL_SMTP_HOST=smtp.gmail.com
EMAIL_SMTP_PORT=587
EMAIL_SMTP_USER=your_email@gmail.com
EMAIL_SMTP_PASS=your_app_password

# ML Configuration
ML_RETRAINING_THRESHOLD=0.03
ML_AUTO_DEPLOYMENT_THRESHOLD=0.02
ML_MIN_TRAINING_SAMPLES=100
EOF
        echo "✅ .env.local created! Please update the values with your actual configuration."
    else
        echo "✅ .env.local already exists."
    fi
}

# Setup n8n workflow
setup_workflow() {
    echo "🔄 Setting up n8n workflow..."
    
    if [ ! -f workflows/ML_Auto_Retraining_Workflow.json ]; then
        echo "❌ n8n workflow file not found!"
        exit 1
    fi
    
    echo "n8n workflow is ready for import."
    echo "Please follow these steps in n8n:"
    echo "1. Open n8n interface (http://localhost:5678)"
    echo "2. Go to 'Import from File'"
    echo "3. Select 'workflows/ML_Auto_Retraining_Workflow.json'"
    echo "4. Configure environment variables in the workflow"
    echo "5. Activate the workflow"
    echo ""
    echo "✅ n8n workflow setup instructions provided!"
}

# Install dependencies
install_dependencies() {
    echo "📦 Installing dependencies..."
    
    if npm install; then
        echo "✅ Dependencies installed!"
    else
        echo "❌ Failed to install dependencies!"
        exit 1
    fi
}

# Test API endpoints
test_api() {
    echo "🧪 Testing API endpoints..."
    
    echo "Starting development server..."
    npm run dev &
    DEV_SERVER_PID=$!
    
    # Wait for server to start
    echo "Waiting for server to start..."
    sleep 10
    
    # Test health endpoint
    if curl -s http://localhost:3000/api/health > /dev/null; then
        echo "✅ Development server is running!"
        
        # Test ML retraining endpoint
        if curl -s http://localhost:3000/api/workflows/ml/auto-retraining?action=status > /dev/null; then
            echo "✅ ML Auto-Retraining API is accessible!"
        else
            echo "⚠️ ML Auto-Retraining API may not be fully configured yet."
        fi
    else
        echo "❌ Development server failed to start!"
    fi
    
    # Stop development server
    kill $DEV_SERVER_PID 2>/dev/null
}

# Create dashboard navigation link
setup_navigation() {
    echo "🧭 Setting up navigation..."
    
    echo "The ML Training dashboard is available at:"
    echo "http://localhost:3000/ml-training"
    echo ""
    echo "Consider adding it to your main navigation menu."
    echo "✅ Navigation setup complete!"
}

# Main setup function
main() {
    echo "Starting ML Auto-Retraining System Setup..."
    echo ""
    
    check_requirements
    echo ""
    
    install_dependencies
    echo ""
    
    setup_environment
    echo ""
    
    setup_database
    echo ""
    
    setup_workflow
    echo ""
    
    setup_navigation
    echo ""
    
    test_api
    echo ""
    
    echo "🎉 ML Auto-Retraining System Setup Complete!"
    echo "=============================================="
    echo ""
    echo "Next steps:"
    echo "1. Update .env.local with your actual configuration values"
    echo "2. Import and activate the n8n workflow"
    echo "3. Start your development server: npm run dev"
    echo "4. Visit http://localhost:3000/ml-training to view the dashboard"
    echo ""
    echo "For detailed documentation, see: docs/ML_AUTO_RETRAINING_SETUP.md"
    echo ""
    echo "Task 71.5 Status: ✅ COMPLETED"
}

# Run main function
main "$@" 